{"version":3,"file":"static/js/7319.3aa39793.chunk.js","mappings":"kUAgJA,QArIA,SAAsBA,GAClB,MAAOC,GAAQC,EAAAA,EAAKC,WACd,QAAEC,EAAO,UAAEC,EAAS,SAAEC,GAAaN,GACnC,aAACO,IAAgBC,EAAAA,EAAAA,KAAaC,GAAYA,EAAMC,gBAkBtD,OAhBAC,EAAAA,EAAAA,YAAU,KACNV,EAAKW,eAAeL,EAAa,GACnC,CAACH,KAcIS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACTC,MAAM,2BACNC,KAAMZ,EACNa,MAAO,IACPC,SAAUb,EACVc,KAhBaC,KACbnB,EAAKoB,iBAAiBC,MAAKC,UACvB,MAAM,KAAEC,SCEb,SAAsBA,GACzB,OAAOC,EAAAA,EAAAA,GAAK,gBAAgBD,EAChC,CDJmCE,CAAaC,GACpCC,EAAAA,GAAQC,QAAQL,GAChBnB,IACAC,GAAU,IACXwB,OAAOC,IACNC,QAAQC,IAAIF,EAAI,GAClB,EAQaG,UAGfC,EAAAA,EAAAA,MAACjC,EAAAA,EAAI,CACFD,KAAMA,EAAKiC,SAAA,EAEVC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVrB,EAAAA,EAAAA,KAACX,EAAAA,EAAKsC,KAAI,CACNC,MAAM,2BACNC,KAAK,OACLC,MAAO,CACH,CACIC,UAAU,EACVhB,QAAS,qDAEfM,UAEFrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,SAGdhC,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVrB,EAAAA,EAAAA,KAACX,EAAAA,EAAKsC,KAAI,CACNC,MAAM,qBACNC,KAAK,SACLC,MAAO,CACH,CACIC,UAAU,EACVhB,QAAS,+CAEfM,UAEFrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,YAKlBV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVrB,EAAAA,EAAAA,KAACX,EAAAA,EAAKsC,KAAI,CACNC,MAAM,iCACNC,KAAK,MACLC,MAAO,CACH,CACIC,UAAU,EACVhB,QAAS,2DAEfM,UAEFrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,SAGdhC,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVrB,EAAAA,EAAAA,KAACX,EAAAA,EAAKsC,KAAI,CACNC,MAAM,2BACNC,KAAK,SACLC,MAAO,CACH,CACIC,UAAU,EACVhB,QAAS,+CAEfM,UAEFC,EAAAA,EAAAA,MAACW,EAAAA,GAAAA,MAAW,CAAAZ,SAAA,EACRrB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACC,MAAO,IAAIb,SAAC,wBACnBrB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACC,MAAO,IAAIb,SAAC,wBACnBrB,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CAACC,MAAO,IAAIb,SAAC,kCAMnCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVrB,EAAAA,EAAAA,KAACX,EAAAA,EAAKsC,KAAI,CACNC,MAAM,qBACNC,KAAK,cACLC,MAAO,CACH,CACIC,UAAU,EACVhB,QAAS,+CAEfM,UAEFrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,SAGdhC,EAAAA,EAAAA,KAACyB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVrB,EAAAA,EAAAA,KAACX,EAAAA,EAAKsC,KAAI,CACNC,MAAM,2BACNC,KAAK,cACLC,MAAO,CACH,CACIC,UAAU,EACVhB,QAAS,qDAEfM,UAEFrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,eAO9B,E,cE8DA,QA7LA,WACI,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAAqB,KAC9CC,EAAMC,IAAWF,EAAAA,EAAAA,UAAiB,IAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAiB,KAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAiB,IACpCO,EAAUC,IAAeR,EAAAA,EAAAA,UAAqB,CAAES,aAAc,GAAIC,OAAQ,MAC1EC,EAASC,IAAcZ,EAAAA,EAAAA,WAAkB,IACzCa,EAAaC,IAAkBd,EAAAA,EAAAA,WAAkB,GAClDe,GAAWC,EAAAA,EAAAA,OACjBvD,EAAAA,EAAAA,YAAU,KACNL,GAAU,GACX,CAAC6C,EAAME,IAGV,MAAM/C,EAAWiB,UACbuC,GAAW,GACX,MAAQtC,MAAM,KAAE2C,EAAI,MAAEZ,UDlBE/B,ECkBgC,IAAKiC,EAAUN,OAAME,aDjB1E5B,EAAAA,EAAAA,GAAK,gBAAiBD,IAD1B,IAAyBA,ECmBxBsC,GAAW,GACXb,EAAYkB,GACZX,EAASD,EAAM,EAIba,EAAU7C,UACZ,MAAM,KAAEC,SDpBT,SAAwB6C,GAC3B,OAAO5C,EAAAA,EAAAA,GAAK,kBAAmB,CAAE4C,MACrC,CCkB+BC,CAAeD,GACtCzC,EAAAA,GAAQC,QAAQL,GAChBlB,GAAU,EAIRiE,EAAgBC,IAClB,MAAM,KAAE9B,EAAI,MAAEK,GAAUyB,EAAEC,OAC1Bf,GAAYgB,IAAS,IACdA,EACH,CAAChC,GAAOK,KACT,EAgCD4B,EAA2C,CAC7C,CACI5D,MAAO,MACP6D,IAAK,QACLC,OAAMA,CAAC9B,EAAO+B,EAAQC,IACXA,EAAQ,GAGvB,CACIhE,MAAO,2BACP6D,IAAK,OACLI,UAAW,QAEf,CACIjE,MAAO,qBACP6D,IAAK,SACLI,UAAW,UAEf,CACIjE,MAAO,iCACP6D,IAAK,OACLI,UAAW,OAGf,CACIjE,MAAO,2BACP6D,IAAK,SACLI,UAAW,SACXH,OAAS9B,GACQ,KAATA,GACOlC,EAAAA,EAAAA,KAACoE,EAAAA,EAAG,CAACC,MAAM,OAAMhD,SAAC,uBACT,KAATa,GACAlC,EAAAA,EAAAA,KAACoE,EAAAA,EAAG,CAACC,MAAM,UAAShD,SAAC,uBACZ,KAATa,GACAlC,EAAAA,EAAAA,KAACoE,EAAAA,EAAG,CAACC,MAAM,UAAShD,SAAC,4BADzB,GAMf,CACInB,MAAO,qBACP6D,IAAK,cACLI,UAAW,cACXH,OAAS9B,IACElC,EAAAA,EAAAA,KAACsE,EAAAA,EAAQ,CAACC,QAASrC,EAAOsC,OAAO,YAIhD,CACItE,MAAO,2BACP6D,IAAK,eACLI,UAAW,cACXH,OAAS9B,IACElC,EAAAA,EAAAA,KAACyE,EAAAA,EAAK,CAACJ,MAAM,QAAQK,KAAMxC,KAI1C,CACIhC,MAAO,eACP6D,IAAK,UACLC,OAAMA,CAAC9B,EAAO+B,EAAQC,KACX5C,EAAAA,EAAAA,MAAAqD,EAAAA,SAAA,CAAAtD,SAAA,EACHrB,EAAAA,EAAAA,KAAC4E,EAAAA,GAAM,CAACC,KAAK,UAAUC,QAASA,IA1ElCb,KACVd,GAAe,GACfC,GAAS2B,EAAAA,EAAAA,IAAgBd,GAAQ,EAwEiBe,CAAKf,GAAQ5C,SAAC,kBACpDrB,EAAAA,EAAAA,KAACiF,EAAAA,EAAU,CACP/E,MAAM,eACNgF,YAAY,iCACZC,OAAO,SACPC,WAAW,SACXC,UAAWA,IAAM9B,EAAQU,EAAOT,IAAKnC,UAErCrB,EAAAA,EAAAA,KAAC4E,EAAAA,GAAM,CAACC,KAAK,UAAUS,QAAM,EAACC,UAAU,KAAIlE,SAAE,wBASlE,OACIC,EAAAA,EAAAA,MAAA,OAAKiE,UAAU,WAAUlE,SAAA,EACrBrB,EAAAA,EAAAA,KAACwF,EAAY,CAACjG,QAAS2D,EAAa1D,UAxF1BA,KACd2D,GAAe,EAAM,EAuFyC1D,SAAUA,KACpEO,EAAAA,EAAAA,KAACyF,EAAAA,EAAI,CAACF,UAAU,SAAQlE,UACpBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZC,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,KAAM,EAAEL,SAAA,EACTrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAG,oCACHrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACH,KAAK,eAAeK,MAAOU,EAASE,aAAc4C,SAAUhC,QAEvEpC,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,KAAM,EAAEL,SAAA,EACTrB,EAAAA,EAAAA,KAAA,KAAAqB,SAAG,8BACHrB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACH,KAAK,SAASK,MAAOU,EAASG,OAAQ2C,SAAUhC,QAE3DpC,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,KAAM,EAAEL,SAAA,EACTrB,EAAAA,EAAAA,KAAC4E,EAAAA,GAAM,CAACC,KAAK,UAAUC,QAASrF,EAAS4B,SAAI,kBAC7CrB,EAAAA,EAAAA,KAAC4E,EAAAA,GAAM,CAACC,KAAK,UAAUS,QAAM,EAACC,UAAU,KAAKT,QAlHnDa,KACV9C,EAAY,CAAEC,aAAc,GAAIC,OAAQ,KACxCR,EAAQ,GACRE,EAAY,IACZhD,GAAU,EA8GkE4B,SAAC,0BAKzEC,EAAAA,EAAAA,MAACmE,EAAAA,EAAI,CAACF,UAAU,KAAIlE,SAAA,EAChBrB,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CACF9B,QAASA,EACT+B,WAAY1D,EACZ2D,OAAS7B,GAAWA,EAAOT,GAC3BR,QAASA,EACT+C,YAAY,KAEhB/F,EAAAA,EAAAA,KAACgG,EAAAA,EAAU,CACPT,UAAU,QACV7C,MAAOA,EACPuD,QAAS3D,EACTE,SAAUA,EACV0D,iBAAe,EACfC,iBAAe,EACfC,UAAY1D,GAAU,UAAKA,WAC3BgD,SA/I8BA,CAACpD,EAAME,KACjDD,EAAQD,GACRG,EAAYD,GACZ/C,GAAU,SAiJlB,C","sources":["pages/estate/tenement/tenmentForm.tsx","api/tenementList.ts","pages/estate/tenement/tenement.tsx"],"sourcesContent":["import { Modal, Row, Col, Form, Input, Radio, message } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { editTenement } from \"../../../api/tenementList\";\nimport { useEffect } from \"react\";\ninterface FormProps {\n    visible: boolean,\n    hideModal: () => void,\n    loadData: () => void\n}\n\n\nfunction TenementForm(props: FormProps) {\n    const [form] = Form.useForm()\n    const { visible, hideModal, loadData } = props\n    const {tenementData} = useSelector((state:any)=>state.tenementSlice)\n\n    useEffect(()=>{\n        form.setFieldsValue(tenementData)\n    },[visible])\n\n\n    const handleOk = () => {\n        form.validateFields().then(async (res) => {\n            const { data } = await editTenement(res)\n            message.success(data)\n            hideModal()\n            loadData()\n        }).catch((err) => {\n            console.log(err)\n        })\n      \n    }\n    return <Modal\n        title='编辑楼宇'\n        open={visible}\n        width={800}\n        onCancel={hideModal}\n        onOk={handleOk}\n\n    >\n        <Form\n           form={form} \n        >\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        label='楼宇名称'\n                        name='name'\n                        rules={[\n                            {\n                                required: true,\n                                message: '楼宇名称不能为空'\n                            }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        label='负责人'\n                        name='person'\n                        rules={[\n                            {\n                                required: true,\n                                message: '负责人不能为空'\n                            }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        label='负责人电话'\n                        name='tel'\n                        rules={[\n                            {\n                                required: true,\n                                message: '负责人电话不能为空'\n                            }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        label='使用状态'\n                        name='status'\n                        rules={[\n                            {\n                                required: true,\n                                message: '负责人不能为空'\n                            }\n                        ]}\n                    >\n                        <Radio.Group>\n                            <Radio value={'1'}>建设中</Radio>\n                            <Radio value={'2'}>已竣工</Radio>\n                            <Radio value={'3'}>使用中</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        label='空置率'\n                        name='vacancyRate'\n                        rules={[\n                            {\n                                required: true,\n                                message: '空置率不能为空'\n                            }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        label='物业费率'\n                        name='propertyFee'\n                        rules={[\n                            {\n                                required: true,\n                                message: '物业费率不能为空'\n                            }\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n\n    </Modal>\n}\n\nexport default TenementForm","//楼宇管理有关的接口\nimport { DataType } from '../pages/estate/tenement/interface'\nimport { post } from '../utils/http/request'\n\n\ninterface searchType {\n    page: number,\n    pageSize: number,\n    bulidingName?: string,\n    person?: string,\n}\n\n//获取数据\nexport function getTenementList(data: searchType) {\n    return post('/tenementList', data)\n}\n\n\n//删除\nexport function deleteTenement(id: string) {\n    return post('/deleteTenement', { id }) //对象形式 属性名和值是一样\n}\n\n//编辑\n\nexport function editTenement(data:DataType){\n    return post('/editTenement',data )\n}","import { Card, Button, Table, Row, Col, Input, Tag, Progress, Badge, Popconfirm, message, Pagination } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { TableProps, PaginationProps } from 'antd';\nimport { getTenementList } from '../../../api/tenementList';\nimport { deleteTenement } from '../../../api/tenementList';\nimport TenementForm from './tenmentForm';\nimport { useDispatch } from 'react-redux';\nimport { DataType } from './interface';\nimport { setTenementData } from '../../../store/tenement/tenementSlice';\n\ninterface searchType { //这个是两个input的数据类型\n    bulidingName: string,\n    person: string,\n}\n\nfunction Tenement() {\n    const [dataList, setDataList] = useState<DataType[]>([]) //列表数据\n    const [page, setPage] = useState<number>(1) //页码的数据\n    const [pageSize, setPagesize] = useState<number>(10)//一页多少条数据\n    const [total, setTotal] = useState<number>(0)\n    const [formData, setFromData] = useState<searchType>({ bulidingName: '', person: '' }) //解构出这两个值\n    const [loading, setLoading] = useState<boolean>(false) //表格加载\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        loadData()\n    }, [page, pageSize])\n\n    //加载列表数据\n    const loadData = async () => {\n        setLoading(true)\n        const { data: { list, total } } = await getTenementList({ ...formData, page, pageSize })  //getTenementList这个接口需要传入bulidingName,person,page,pageSize这几个数据，这里用fromdata解构出前两个\n        setLoading(false)\n        setDataList(list)\n        setTotal(total)\n    }\n\n    //删除列表数据 confirm\n    const confirm = async (id: string) => { //接收要删除的那一行的id\n        const { data } = await deleteTenement(id)\n        message.success(data)\n        loadData()\n    }\n\n    //拿到页面上面两个input的值\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target\n        setFromData(prevState => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n\n    //页码事件\n    const onChange: PaginationProps['onChange'] = (page, pageSize) => {\n        setPage(page)\n        setPagesize(pageSize)\n        loadData()\n\n    }\n\n    //重置\n    const reset = () => {\n        setFromData({ bulidingName: '', person: '' })\n        setPage(1)\n        setPagesize(10)\n        loadData()\n    }\n\n    //编辑事件\n    const edit = (record:DataType) => {\n        setIsModalOpen(true)\n        dispatch(setTenementData(record))\n    }\n    //关闭弹窗\n    const hideModal = () => {\n        setIsModalOpen(false)\n        \n    }\n\n\n\n    const columns: TableProps<DataType>['columns'] = [  //列表数据\n        {\n            title: 'No.',\n            key: 'index',\n            render(value, record, index) {\n                return index + 1\n            }\n        },\n        {\n            title: '楼宇名称',\n            key: 'name',\n            dataIndex: 'name',\n        },\n        {\n            title: '负责人',\n            key: 'person',\n            dataIndex: 'person',\n        },\n        {\n            title: '负责人电话',\n            key: ' tel',\n            dataIndex: 'tel',\n        },\n\n        {\n            title: '使用状态',\n            key: 'status',\n            dataIndex: 'status',\n            render: (value) => {\n                if (value == '1') {\n                    return <Tag color='#f50'>建设中</Tag>\n                } else if (value == '2') {\n                    return <Tag color='#2db7f5'>已竣工</Tag>\n                } else if (value == '3') {\n                    return <Tag color='#87d068'>使用中</Tag>\n                }\n            }\n        },\n\n        {\n            title: '空置率',\n            key: 'vacancyRate',\n            dataIndex: 'vacancyRate',\n            render: (value) => {\n                return <Progress percent={value} status='active' />\n            }\n        },\n\n        {\n            title: '物业费率',\n            key: ' propertyFee',\n            dataIndex: 'propertyFee',\n            render: (value) => {\n                return <Badge color='green' text={value} />\n            }\n        },\n\n        {\n            title: '操作',\n            key: 'operate',\n            render(value, record, index) {\n                return <>\n                    <Button type='primary' onClick={() => edit(record)}>编辑</Button>\n                    <Popconfirm\n                        title='删除'\n                        description=\"确认删除？\"\n                        okText='是'\n                        cancelText='否'\n                        onConfirm={() => confirm(record.id)} //将整个一行需要删除的数据的id传入\n                    >\n                        <Button type='primary' danger className='ml' >删除</Button>\n                    </Popconfirm>\n                </>\n\n            }\n        },\n    ];\n\n\n    return (\n        <div className='tenement'>\n            <TenementForm visible={isModalOpen} hideModal={hideModal} loadData={loadData} />\n            <Card className='search'>\n                <Row gutter={16}>\n                    <Col span={6}>\n                        <p>楼宇管理：</p>\n                        <Input name='bulidingName' value={formData.bulidingName} onChange={handleChange} />\n                    </Col>\n                    <Col span={6}>\n                        <p>负责人：</p>\n                        <Input name='person' value={formData.person} onChange={handleChange} />\n                    </Col>\n                    <Col span={4}>\n                        <Button type='primary' onClick={loadData}   >查询</Button>\n                        <Button type='primary' danger className='ml' onClick={reset}>重制</Button>\n                    </Col>\n                </Row>\n            </Card>\n\n            <Card className='mt'>\n                <Table\n                    columns={columns}\n                    dataSource={dataList}\n                    rowKey={(record) => record.id}\n                    loading={loading}\n                    pagination={false}\n                />\n                <Pagination\n                    className=\"fr mt\"\n                    total={total}\n                    current={page}\n                    pageSize={pageSize}\n                    showSizeChanger\n                    showQuickJumper\n                    showTotal={(total) => `共 ${total} 条`}\n                    onChange={onChange}\n                />\n            </Card>\n        </div>\n    )\n}\n\nexport default Tenement"],"names":["props","form","Form","useForm","visible","hideModal","loadData","tenementData","useSelector","state","tenementSlice","useEffect","setFieldsValue","_jsx","Modal","title","open","width","onCancel","onOk","handleOk","validateFields","then","async","data","post","editTenement","res","message","success","catch","err","console","log","children","_jsxs","Row","gutter","Col","span","Item","label","name","rules","required","Input","Radio","value","dataList","setDataList","useState","page","setPage","pageSize","setPagesize","total","setTotal","formData","setFromData","bulidingName","person","loading","setLoading","isModalOpen","setIsModalOpen","dispatch","useDispatch","list","confirm","id","deleteTenement","handleChange","e","target","prevState","columns","key","render","record","index","dataIndex","Tag","color","Progress","percent","status","Badge","text","_Fragment","Button","type","onClick","setTenementData","edit","Popconfirm","description","okText","cancelText","onConfirm","danger","className","TenementForm","Card","onChange","reset","Table","dataSource","rowKey","pagination","Pagination","current","showSizeChanger","showQuickJumper","showTotal"],"sourceRoot":""}