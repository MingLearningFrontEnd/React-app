{"version":3,"file":"static/js/86.b8e27376.chunk.js","mappings":"6HA2DA,QAjDA,SAA6CA,EAAkBC,GAC3D,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAc,KACvCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAiB,IAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAiB,KAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAiB,IACpCO,EAASC,IAAcR,EAAAA,EAAAA,WAAkB,IACzCS,EAAUC,IAAeV,EAAAA,EAAAA,UAAYJ,GAEtCe,EAASC,UACXJ,GAAW,GACX,IACI,MAAOK,MAAK,KAACC,EAAI,MAACT,UAAgBR,EAAU,CAACI,OAAKE,cAAYM,IAC9DV,EAAYe,GACZR,EAASD,EACb,CAAE,MAAOU,GACLC,QAAQC,IAAIF,EAChB,CAAC,QACGP,GAAW,EACf,GA4BJ,OAxBAU,EAAAA,EAAAA,YAAU,KACNP,GAAU,GACZ,CAACV,EAAKE,EAASN,IAsBX,CAACC,WAASG,OAAKE,WAASI,UAAQF,QAAMI,WAASV,cAAYG,UAAQE,cAAYE,WAASE,aAAWE,cAAYC,WAASQ,SAZ7GA,CAAClB,EAAYE,KAC1BD,EAAQD,GACRG,EAAYD,EAAS,EAU8GiB,aApBnHC,IAChB,MAAK,KAACC,EAAI,MAACC,GAASF,EAAEG,OACtBd,GAAYe,IAAW,IAChBA,EACH,CAACH,GAAMC,KACR,EAe6IG,MAPtIA,KACVxB,EAAQ,GACRE,EAAY,IACZM,EAAYd,EAAgB,EAKpC,C,yLCxCA,QAbA,SAAyB+B,EAAwBC,GAC7C,OAAO,SAASC,GACZ,OAAO,SAASC,GAER,OADwBF,EAAmBG,OAAMC,GAAML,EAAeM,SAASD,MAI7EE,EAAAA,EAAAA,KAACL,EAAS,IAAKC,IAFN,IAGnB,CAEJ,CACJ,E,4CCyHA,QApHA,SAAqBA,GACjB,MAAM,QAAEK,EAAO,UAAEC,EAAS,SAACzB,GAAYmB,GAChCO,GAAQC,EAAAA,EAAKC,UAepB,OACIL,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CACFC,MAAM,2BACNC,KAAMP,EACNQ,SAAUP,EACVQ,MAAO,IACPC,KAlBSC,KACbT,EAAKU,iBAAiBC,MAAKpC,UACvB,MAAK,KAACC,SCfPoC,EAAAA,EAAAA,GAAK,cDgBJC,EAAAA,GAAQC,QAAQtC,GAChBuB,IACAzB,GAAU,IACXyC,OAAOC,IACNrC,QAAQC,IAAIoC,EAAI,GAClB,EAUiBC,UAGfC,EAAAA,EAAAA,MAACjB,EAAAA,EAAI,CACDD,KAAMA,EAAKiB,SAAA,EAEXC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVpB,EAAAA,EAAAA,KAACI,EAAAA,EAAKsB,KAAI,CACNC,MAAM,2BACNvC,KAAK,cACLwC,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,qDAEfI,UAEFpB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,SAId9B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVpB,EAAAA,EAAAA,KAACI,EAAAA,EAAKsB,KAAI,CACNC,MAAM,2BACNvC,KAAK,OACLwC,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,qDAEfI,UAEFpB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,YAKlBT,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVpB,EAAAA,EAAAA,KAACI,EAAAA,EAAKsB,KAAI,CACNC,MAAM,qBACNvC,KAAK,SACLwC,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,+CAEfI,UAEFpB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,SAKd9B,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVpB,EAAAA,EAAAA,KAACI,EAAAA,EAAKsB,KAAI,CACNC,MAAM,iCACNvC,KAAK,MACLwC,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2DAEfI,UAEFpB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,YAMlB9B,EAAAA,EAAAA,KAACsB,EAAAA,EAAG,CAACC,OAAQ,GAAGH,UACZpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVpB,EAAAA,EAAAA,KAACI,EAAAA,EAAKsB,KAAI,CACNC,MAAM,2BACNvC,KAAK,aACLwC,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,qDAEfI,UAEFpB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,cAOlC,EErGMC,EAA2B,CAC7B,CACIxB,MAAO,qBACPyB,IAAK,cAET,CACIzB,MAAO,2BACPyB,IAAK,UAET,CACIzB,MAAO,2BACPyB,IAAK,UACLZ,SAAU,CACN,CACIb,MAAO,2BACPyB,IAAK,oBAET,CACIzB,MAAO,2BACPyB,IAAK,gBAET,CACIzB,MAAO,2BACPyB,IAAK,iBAKjB,CACIzB,MAAO,2BACPyB,IAAK,WAET,CACIzB,MAAO,2BACPyB,IAAK,WACLZ,SAAU,CACN,CACIb,MAAO,2BACPyB,IAAK,qBAET,CACIzB,MAAO,2BACPyB,IAAK,mBAIjB,CACIzB,MAAO,2BACPyB,IAAK,cAET,CACIzB,MAAO,2BACPyB,IAAK,aACLZ,SAAU,CACN,CACIb,MAAO,2BACPyB,IAAK,kBAET,CACIzB,MAAO,2BACPyB,IAAK,sBAET,CACIzB,MAAO,2BACPyB,IAAK,yBAIjB,CACIzB,MAAO,2BACPyB,IAAK,cAET,CACIzB,MAAO,2BACPyB,IAAK,WAET,CACIzB,MAAO,2BACPyB,IAAK,aAET,CACIzB,MAAO,2BACPyB,IAAK,cAIb,SAASC,EAAWtD,GAChB,IAAIuD,EAAiB,GASrB,OARAvD,EAAKwD,SAASrC,IACV,GAAIA,EAAKsB,UAAYtB,EAAKsB,SAASgB,OAAS,EAAG,CAC3C,MAAMC,EAAqBJ,EAAWnC,EAAKsB,UAC3Cc,EAAOA,EAAKI,OAAOD,EACvB,MACIH,EAAKK,KAAKzC,EAAKkC,IACnB,IAEGE,CACX,CAsLA,QAlLA,WACI,MAAOM,EAAaC,IAAkB3E,EAAAA,EAAAA,UAAsB,KACtD,SAAE4E,IAAaC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,aAChDC,EAAaC,IAAkBjF,EAAAA,EAAAA,UAAiB,6BAChDkF,EAAaC,IAAkBnF,EAAAA,EAAAA,WAAkB,IACxDkB,EAAAA,EAAAA,YAAU,KACNyD,EAAeR,EAAWS,GAAU,GACrC,IAGH,MAAM,SACF9E,EAAQ,KACRG,EAAI,SACJE,EAAQ,QACRI,EAAO,MACPF,EAAK,SACLI,EAAQ,YACRV,EAAW,QACXG,EAAO,YACPE,EAAW,SACXE,EAAQ,WACRE,EAAU,YACVE,EAAW,SACXC,EAAQ,SACRQ,EAAQ,aACRC,EAAY,MACZM,IACA0D,EAAAA,EAAAA,GAAkC,CAAEJ,YAAa,IAAMK,EAAAA,IA4BrDC,EAA2BC,EAAgBC,KAAKC,MAAMC,eAAeC,QAAQ,YAAsB,CAAC,UAAzEJ,CAAoFK,EAAAA,IAE/GC,EAAU,CACZ,CACIpD,MAAO,MACPyB,IAAK,QACL4B,OAAMA,CAACvE,EAAYwE,EAAaC,IACrBA,EAAQ,GAGvB,CACIvD,MAAO,2BACPwD,UAAW,cACX/B,IAAK,eAET,CACIzB,MAAO,2BACPwD,UAAW,OACX/B,IAAK,QAET,CACIzB,MAAO,qBACPwD,UAAW,SACX/B,IAAK,UAET,CACIzB,MAAO,iCACPwD,UAAW,MACX/B,IAAK,OAET,CACIzB,MAAO,2BACPwD,UAAW,aACX/B,IAAK,cAET,CACIzB,MAAO,eACPyB,IAAK,UACL4B,OAAMA,CAACvE,EAAiBwE,KACbxC,EAAAA,EAAAA,MAAA2C,EAAAA,SAAA,CAAA5C,SAAA,EACHpB,EAAAA,EAAAA,KAAC0D,EAAAA,GAAM,CAACO,KAAK,QAAQC,KAAK,UAAUC,QAASA,IAhEhDC,EAACC,EAAgBvB,KAC1BC,EAAeD,GACf,MAAMwB,EAAerC,EAAWoC,GAChC5B,EAAe6B,EAAe,EA6DiCF,CAAKP,EAAOQ,KAAOR,EAAOf,aAAa1B,SAAC,8BAC3FpB,EAAAA,EAAAA,KAACuE,EAAAA,EAAU,CACPhE,MAAM,2BACNiE,YAAY,qEACZC,OAAO,SACPC,WAAW,SACftD,UAEIpB,EAAAA,EAAAA,KAACoD,EAAU,CAACa,KAAK,QAAQC,KAAK,UAAUS,QAAM,EAACC,UAAU,KAAIxD,SAAC,oCAQlF,OACIC,EAAAA,EAAAA,MAAA,OAAKuD,UAAU,WAAUxD,SAAA,EACrBpB,EAAAA,EAAAA,KAAC6E,EAAW,CAAC5E,QAAS+C,EAAa9C,UAnEzBA,KACd+C,GAAe,EAAM,EAkEwCxE,SAAUA,KACnEuB,EAAAA,EAAAA,KAAC8E,EAAAA,EAAI,CAAA1D,UACDC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAGH,SAAA,EACZpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,EAAEL,UACTpB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CAACiD,YAAY,uCAAS1F,MAAOd,EAASuE,YAAa1D,KAAK,cAAcH,SAAUC,OAE1Fc,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,EAAEL,UACTpB,EAAAA,EAAAA,KAAC0D,EAAAA,GAAM,CAACQ,KAAK,UAAUC,QAAS1F,EAAS2C,SAAC,oBAE9CpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,EAAGmD,UAAU,KAAIxD,UACxBpB,EAAAA,EAAAA,KAAC0D,EAAAA,GAAM,CAACQ,KAAK,UAAUC,QAzE/Ba,KACR/B,GAAe,EAAK,EAwEgC7B,SAAC,qCAKjDC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,GAAIqD,UAAU,KAAIxD,SAAA,EAC3BC,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,KAAM,EAAEL,SAAA,EACTpB,EAAAA,EAAAA,KAAC8E,EAAAA,EAAI,CAACvE,MAAOuC,EAAc,4BAAS1B,UAChCpB,EAAAA,EAAAA,KAACiF,EAAAA,EAAI,CACDC,WAAS,EACTnD,SAAUA,EACVS,YAAaA,EACb2C,QAlGa3C,IACjCC,EAAeD,EAA2B,OAoG9BxC,EAAAA,EAAAA,KAAC8E,EAAAA,EAAI,CAACF,UAAU,KAAIxD,UAChBC,EAAAA,EAAAA,MAACkD,EAAAA,EAAU,CACPhE,MAAM,2BACNkE,OAAO,SACPC,WAAW,SACXF,YAAa,uCAAS1B,8CACtBsC,UAvGFC,KAClBvG,QAAQC,IAAIyD,EAAYM,EAAY,EAsGS1B,SAAA,CAC5B,OAAGpB,EAAAA,EAAAA,KAAC0D,EAAAA,GAAM,CAACQ,KAAK,UAAS9C,SAAC,sCAKnCpB,EAAAA,EAAAA,KAACwB,EAAAA,EAAG,CAACC,KAAM,GAAGL,UACVC,EAAAA,EAAAA,MAACyD,EAAAA,EAAI,CAAA1D,SAAA,EACDpB,EAAAA,EAAAA,KAACsF,EAAAA,EAAK,CACFC,WAAY3H,EACZ+F,QAASA,EACT6B,YAAY,EACZnH,QAASA,EACToH,OAAQ5B,GAAUA,EAAO6B,MAG7B1F,EAAAA,EAAAA,KAAC2F,EAAAA,EAAU,CACPf,UAAU,QACVgB,iBAAe,EACfC,iBAAe,EACf1H,MAAOA,EACP2H,QAAS/H,EACTE,SAAUA,EACV8H,UAAY5H,GAAU,SAAIA,UAC1Bc,SAAUA,cAQtC,C","sources":["hooks/useDataList.ts","utils/http/withPermissions.tsx","pages/settings/settingForm.tsx","api/settings.ts","pages/settings/index.tsx"],"sourcesContent":["import {useCallback, useEffect, useState} from'react'\ntype MyFormData={\n    [key:string]:any\n}\n\n\ninterface DataFetcher<T>{\n   (arg:T&{page:number;pageSize:number}):Promise<any>\n}\n\nfunction useDatalist<T extends MyFormData,U>(initialFormData:T,fetchData:DataFetcher<T>){\n    const [dataList, setDataList] = useState<U[]>([])//列表数据\n    const [page, setPage] = useState<number>(1) //页码的数据\n    const [pageSize, setPagesize] = useState<number>(10)//一页多少条数据\n    const [total, setTotal] = useState<number>(0)\n    const [loading, setLoading] = useState<boolean>(false) //表格加载\n    const [formData, setFormData] = useState<T>(initialFormData) //将搜索input写在一个usestate里\n\n    const loadData=async()=>{\n        setLoading(true)\n        try {\n            const {data:{list,total}} = await fetchData({page,pageSize,...formData})\n            setDataList(list)\n            setTotal(total)\n        } catch (error) {\n            console.log(error)\n        }finally{\n            setLoading(false)\n        }\n       \n    }\n\n    useEffect(()=>{\n        loadData()\n    },[page,pageSize,fetchData])\n\n    const handleChange=(e:React.ChangeEvent<HTMLInputElement>)=>{\n        const{name,value} = e.target\n        setFormData(prevState=>({\n            ...prevState,\n            [name]:value\n        }))\n    }\n\n    const onChange = (page:number,pageSize:number)=>{\n        setPage(page)\n        setPagesize(pageSize)\n    }\n\n    const reset = () => {\n        setPage(1)\n        setPagesize(10)\n        setFormData(initialFormData)\n\n    }\n\n    return{dataList,page,pageSize,loading,total,formData,setDataList,setPage,setPagesize,setTotal,setLoading,setFormData,loadData,onChange,handleChange,reset}\n}\n\nexport default useDatalist","\n\n\n //外层函数，接收所拥有的权限和当前按钮所需要的权限\nfunction withPermissions(userPermission:string[],requiredPermission:string[]):(Component:React.FC)=>React.FC{\n    return function(Component:React.FC){ //高阶组件 接收一个组件当参数\n        return function(props:any):React.ReactElement|null{  //返回的一个组件\n            const hasPermission:boolean=requiredPermission.every(item=>userPermission.includes(item)) //判断有没有权限，是个布尔值\n                if(!hasPermission){\n                    return null\n                }\n            return<Component {...props}/>\n        }\n\n    }\n}\n\nexport default withPermissions","import { Modal, Form, Row, Col, Input, Radio, message } from \"antd\"\nimport { useEffect, useState } from \"react\"\nimport { addAccount } from \"../../api/settings\"\n\ninterface FromProps {\n    visible: boolean,\n    hideModal: () => void,\n    loadData:() => void,\n}\n\ninterface SearchType {\n    accountName: string,\n    auth: string,\n    person: string,\n    tel: string,\n    department: string\n}\n\n\n\nfunction SettingForm(props: FromProps) {\n    const { visible, hideModal,loadData} = props\n    const [form] = Form.useForm()\n   \n\n    const handleOk = ()=>{\n        form.validateFields().then(async(res)=>{\n            const{data} = await addAccount(res)\n            message.success(data)\n            hideModal()\n            loadData() //新增后更新数据\n        }).catch((err)=>{\n            console.log(err)  //验证不通过的处理\n        })\n    }\n   \n\n    return (\n        <Modal\n            title='新增账号'\n            open={visible}\n            onCancel={hideModal}\n            width={800}\n            onOk={handleOk}\n\n        >\n            <Form\n                form={form}\n            >\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='账号名称'\n                            name='accountName'\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '账号名称不能为空'\n                                }\n                            ]}\n                        >\n                            <Input/>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item\n                            label='所属权限'\n                            name='auth'\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '所属权限不能为空'\n                                },\n                            ]}\n                        >\n                            <Input  />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='使用人'\n                            name='person'\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '使用人不能为空'\n                                }\n                            ]}\n                        >\n                            <Input  />\n\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item\n                            label='使用人电话'\n                            name='tel'\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '使用人电话不能为空'\n                                },\n                            ]}\n                        >\n                            <Input />\n\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label='所属部门'\n                            name='department'\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '所属部门不能为空'\n                                }\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </Modal >\n    )\n}\n\nexport default SettingForm","import { post } from \"../utils/http/request\";\n\n\ninterface SearchType {\n    accountName: string,\n    auth: string,\n    person: string,\n    tel: string,\n    department: string\n}\n\nexport function addAccount(data:SearchType) {\n    return post('/addAcount')\n}","import { Card, Input, Row, Col, Table, Button, Pagination, Popconfirm, Tree } from 'antd'\nimport type { TableProps, TreeDataNode, TreeProps } from 'antd'\nimport { getAccountList } from '../../api/user'\nimport useDatalist from '../../hooks/useDataList'\nimport { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport withPermissions from '../../utils/http/withPermissions'\nimport SettingForm from './settingForm'\n\n\n\n\ninterface MenuType{ //menu的数据类型\n    label:string,\n    icon:string,\n    key:string,\n    children?:MenuType[]\n}\n\ninterface DataType { //列表数据类型\n    id: number,\n    accountName: string,\n    auth: string,\n    person: string,\n    tel: string,\n    department: string,\n}\n\ninterface SearchType { //input数据类型\n    accountName: string,\n}\n\n\nconst treeData: TreeDataNode[] = [ //树形图所有菜单的静态数据\n    {\n        title: '工作台',\n        key: '/dashboard',\n    },\n    {\n        title: '租户管理',\n        key: '/users',\n    },\n    {\n        title: '物业管理',\n        key: '/estate',\n        children: [\n            {\n                title: \"楼宇管理\",\n                key: \"/estate/tenement\"\n            },\n            {\n                title: \"房间管理\",\n                key: \"/estate/room\"\n            },\n            {\n                title: \"车辆信息\",\n                key: \"/estate/car\"\n            }\n\n        ]\n    },\n    {\n        title: '报修管理',\n        key: '/repair',\n    },\n    {\n        title: '财务管理',\n        key: '/finance',\n        children: [\n            {\n                title: \"合同管理\",\n                key: \"/finance/contract\"\n            },\n            {\n                title: \"账单管理\",\n                key: \"/finance/bill\"\n            }\n        ]\n    },\n    {\n        title: '招商管理',\n        key: '/merchants',\n    },\n    {\n        title: '运营管理',\n        key: '/operation',\n        children: [\n            {\n                title: \"运营总览\",\n                key: \"/operation/all\"\n            },\n            {\n                title: \"文章发布\",\n                key: \"/operation/article\"\n            },\n            {\n                title: \"内容评论\",\n                key: \"/operation/comments\"\n            }\n        ]\n    },\n    {\n        title: '设备管理',\n        key: '/equipment',\n    },\n    {\n        title: '能源消耗',\n        key: '/energy',\n    },\n    {\n        title: '系统设置',\n        key: \"/settings\",\n    },\n    {\n        title: '个人中心',\n        key: \"/personal\",\n    },\n];\n\nfunction handleKeys(data: any) { //将redux中的用户菜单权限处理成需要的格式，只取出里面的key，返回一个keys是需要的类型\n    let keys: string[] = []\n    data.forEach((item: any) => {\n        if (item.children && item.children.length > 0) {\n            const childKey: string[] = handleKeys(item.children)\n            keys = keys.concat(childKey)\n        } else {\n            keys.push(item.key)\n        }\n    })\n    return keys\n}\n\n\n\nfunction Settings() {\n    const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([]) //定义选中的keys\n    const { menuList } = useSelector((state: any) => state.authSlice) //从redux中取出每个账号权限的菜单\n    const [accountName, setAccountName] = useState<string>('当前用户')//显示更改谁的权限\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\n    useEffect(() => {//挂载数据\n        setCheckedKeys(handleKeys(menuList)) //这里不能直接将redux中的menulist传入，必须先处理成需要的格式\n    }, [])\n\n\n    const { //调用自定义hooks\n        dataList,\n        page,\n        pageSize,\n        loading,\n        total,\n        formData,\n        setDataList,\n        setPage,\n        setPagesize,\n        setTotal,\n        setLoading,\n        setFormData,\n        loadData,\n        onChange,\n        handleChange,\n        reset\n    } = useDatalist<SearchType, DataType>({ accountName: '' }, getAccountList)\n\n   \n\n    const edit = (menu:MenuType[],accountName:string) => {  //更改权限事件，接收menu和accountname两个参数\n        setAccountName(accountName) //变更网页显示的需要更改权限的账户名\n        const newCheckedKeys=handleKeys(menu)//用handlekey函数处理menu\n        setCheckedKeys(newCheckedKeys)//将处理好的menu传入更改选择的key\n    }\n \n    const onCheck:TreeProps['onCheck'] =(checkedKeys)=>{ //tree让自己可选择打勾的事件\n        setCheckedKeys(checkedKeys as React.Key[]) //将自己选中的key传入key里\n    }\n\n    const handleConfirm = () => { //确认提交修改事件\n        console.log(checkedKeys,accountName)\n        \n    }\n\n    const hideModal = ()=>{\n        setIsModalOpen(false)\n\n    }\n    const add = ()=>{\n        setIsModalOpen(true)\n    }\n    \n    //按钮权限\n    const AuthBotton:React.FC<any> = withPermissions(JSON.parse(sessionStorage.getItem('btnAuth') as string),['delete'])(Button)\n    \n    const columns = [ //列表表头\n        {\n            title: 'No.',\n            key: 'index',\n            render(value: any, record: any, index: any) {\n                return index + 1\n            }\n        },\n        {\n            title: '账号名称',\n            dataIndex: 'accountName',\n            key: 'accountName',\n        },\n        {\n            title: '所属权限',\n            dataIndex: 'auth',\n            key: 'auth',\n        },\n        {\n            title: '使用人',\n            dataIndex: 'person',\n            key: 'person',\n        },\n        {\n            title: '使用人电话',\n            dataIndex: 'tel',\n            key: 'tel',\n        },\n        {\n            title: '所属部门',\n            dataIndex: 'department',\n            key: 'department',\n        },\n        {\n            title: '操作',\n            key: 'operate',\n            render(value: MenuType, record: any) {\n                return <>\n                    <Button size='small' type='primary' onClick={() => edit(record.menu , record.accountName)}>修改权限</Button>\n                    <Popconfirm\n                        title='操作提示'\n                        description='确认要删除当前账号吗？'\n                        okText='是'\n                        cancelText='否'\n                    // onConfirm={}\n                    >\n                        <AuthBotton size='small' type='primary' danger className='ml'>删除账号</AuthBotton>\n                        {/* <Button size='small' type='primary' danger className='ml'>删除账号</Button> */}\n                    </Popconfirm>\n                </>\n            }\n        }\n\n    ]\n    return (\n        <div className=\"settings\">\n            <SettingForm visible={isModalOpen} hideModal={hideModal} loadData={loadData}/>\n            <Card>\n                <Row gutter={16} >\n                    <Col span={8}>\n                        <Input placeholder='请输入账户名' value={formData.accountName} name='accountName' onChange={handleChange} />\n                    </Col>\n                    <Col span={8}>\n                        <Button type='primary' onClick={loadData}>查询</Button>\n                    </Col>\n                    <Col span={8} className='tr'>\n                        <Button type='primary' onClick={add}>新增账号</Button>\n                    </Col>\n                </Row>\n            </Card>\n\n            <Row gutter={16} className='mt'>\n                <Col span={8}>\n                    <Card title={accountName + ':所拥权限' } >\n                        <Tree\n                            checkable\n                            treeData={treeData}\n                            checkedKeys={checkedKeys} //选择上的key\n                            onCheck={onCheck}\n                        />\n                    </Card>\n                    <Card className='mt'>\n                        <Popconfirm\n                            title='操作提示'\n                            okText='是'\n                            cancelText='否'\n                            description={`您确认要修改${accountName}用户的权限吗？`}\n                            onConfirm={handleConfirm}\n                        >   <Button type='primary'>提交修改</Button>\n                        </Popconfirm>\n\n                    </Card>\n                </Col>\n                <Col span={16}>\n                    <Card>\n                        <Table\n                            dataSource={dataList}\n                            columns={columns}\n                            pagination={false}\n                            loading={loading}\n                            rowKey={record => record.id}\n                        />\n\n                        <Pagination\n                            className='fr mt'\n                            showQuickJumper\n                            showSizeChanger\n                            total={total}\n                            current={page}\n                            pageSize={pageSize}\n                            showTotal={(total) => `共${total}条`}\n                            onChange={onChange}\n                        />\n                    </Card>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default Settings"],"names":["initialFormData","fetchData","dataList","setDataList","useState","page","setPage","pageSize","setPagesize","total","setTotal","loading","setLoading","formData","setFormData","loadData","async","data","list","error","console","log","useEffect","onChange","handleChange","e","name","value","target","prevState","reset","userPermission","requiredPermission","Component","props","every","item","includes","_jsx","visible","hideModal","form","Form","useForm","Modal","title","open","onCancel","width","onOk","handleOk","validateFields","then","post","message","success","catch","err","children","_jsxs","Row","gutter","Col","span","Item","label","rules","required","Input","treeData","key","handleKeys","keys","forEach","length","childKey","concat","push","checkedKeys","setCheckedKeys","menuList","useSelector","state","authSlice","accountName","setAccountName","isModalOpen","setIsModalOpen","useDatalist","getAccountList","AuthBotton","withPermissions","JSON","parse","sessionStorage","getItem","Button","columns","render","record","index","dataIndex","_Fragment","size","type","onClick","edit","menu","newCheckedKeys","Popconfirm","description","okText","cancelText","danger","className","SettingForm","Card","placeholder","add","Tree","checkable","onCheck","onConfirm","handleConfirm","Table","dataSource","pagination","rowKey","id","Pagination","showQuickJumper","showSizeChanger","current","showTotal"],"sourceRoot":""}