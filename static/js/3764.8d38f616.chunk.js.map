{"version":3,"file":"static/js/3764.8d38f616.chunk.js","mappings":"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","sources":["components/navLeft/iconList.tsx","components/navLeft/index.tsx","components/breadCrumb/index.tsx","components/header/index.tsx","pages/home/index.tsx"],"sourcesContent":["import {\n    DashboardOutlined,\n    UserOutlined,\n    UnorderedListOutlined,\n    UserAddOutlined,\n    SettingOutlined,\n    ProfileOutlined,\n    ToolOutlined,\n    LaptopOutlined,\n    InsertRowLeftOutlined,\n    BankOutlined,\n    TruckOutlined,\n    DollarOutlined,\n    FileTextOutlined,\n    FrownOutlined,\n    TransactionOutlined,\n    FundProjectionScreenOutlined,\n    FundViewOutlined,\n    ReadOutlined,\n    CommentOutlined,\n    ThunderboltOutlined,\n    TeamOutlined,\n    RadarChartOutlined,\n    SnippetsOutlined,\n    \n} from '@ant-design/icons';\nconst icons: any = {\n    DashboardOutlined: <DashboardOutlined />,\n    UserOutlined: <UserOutlined />,\n    UnorderedListOutlined: <UnorderedListOutlined />,\n    UserAddOutlined: <UserAddOutlined />,\n    SettingOutlined: <SettingOutlined />,\n    LaptopOutlined: <LaptopOutlined />,\n    ProfileOutlined: <ProfileOutlined />,\n    InsertRowLeftOutlined: <InsertRowLeftOutlined />,\n    BankOutlined: <BankOutlined />,\n    ToolOutlined: <ToolOutlined />,\n    TruckOutlined: <TruckOutlined />,\n    DollarOutlined: <DollarOutlined />,\n    FileTextOutlined: <FileTextOutlined />,\n    FrownOutlined: <FrownOutlined />,\n    TransactionOutlined: <TransactionOutlined />,\n    FundProjectionScreenOutlined: <FundProjectionScreenOutlined />,\n    FundViewOutlined: <FundViewOutlined />,\n    ReadOutlined: <ReadOutlined />,\n    CommentOutlined: <CommentOutlined />,\n    ThunderboltOutlined: <ThunderboltOutlined />,\n    TeamOutlined: <TeamOutlined />,\n    RadarChartOutlined:<RadarChartOutlined/>,\n    SnippetsOutlined:<SnippetsOutlined/>\n};\n\nexport default icons","import { Menu } from 'antd';\nimport { useEffect, useState } from 'react';\nimport icons from './iconList';\nimport logo from'../../assets/logo.png'\nimport'./index.scss'\nimport {useSelector} from 'react-redux';\nimport { useNavigate,useLocation } from 'react-router-dom';\n\ninterface MenuItem{\n    key:string,\n    label:string,\n    icon?: React.ReactNode,\n    children?:MenuItem[]\n}\n\n\nfunction NavLeft() {\n    const { menuList } = useSelector((state: any) => state.authSlice)\n    const [menuData,setMenuData] = useState<MenuItem[]>([]) //设置state准备用来存菜单数据\n    const navigate = useNavigate()\n    const location = useLocation()\n    \n    useEffect(()=>{  //页面第一次进入，挂载菜单数据\n        configMenu()  \n    },[menuList])\n\n    async function configMenu(){\n       const mappedMenuItems = mapMenuItems(menuList) //用下面处理菜单的函数处理后的菜单数据\n       setMenuData(mappedMenuItems) //更改菜单数据\n    }\n\n    //将返回的菜单数据转换成需要的格式\n    function mapMenuItems(item:any):any{\n        return item.map((item:any)=>({\n            key:item.key,\n            label:item.label,\n            icon:icons[item.icon],//icons是在外面定义了一个iconlist映射的数据，将它转换成了reactnode\n            children:item.children?mapMenuItems(item.children):null //递归\n        }))\n    }\n        function handleClick({key}:{key:string}){\n            navigate(key)\n        }\n\n    return <div className='navleft'>\n        <div className='logo'>\n            <img src={logo} alt=\"\" width={18}/>\n            <h1>朋远智慧园区</h1>\n        </div>\n        <Menu\n            defaultSelectedKeys={['/dashboard']}\n            mode=\"inline\"\n            theme=\"dark\"\n            items={menuData} //data数据\n            onClick={handleClick}\n            selectedKeys={[location.pathname]}\n        />\n    </div>\n}\n\nexport default NavLeft","import { useLocation } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport { Breadcrumb } from \"antd\"\n\ninterface MenuItem {\n    key: string,\n    label: string,\n    children?: MenuItem[]\n}\n\n\n\n\nfunction findBreadCrumbPath(path: string, menuItems: MenuItem[]): string[] {\n    const pathSegments: string[] = []\n    function findPath(currentPath: string, items: MenuItem[]) {\n        for (let item of items) {\n            if (currentPath.startsWith(item.key)) {\n                pathSegments.push(item.label)\n                if (item.children) {  //递归\n                    findPath(currentPath, item.children)\n                }\n                break\n            }\n        }\n        return pathSegments\n    }\n    return findPath(path, menuItems)\n}\n\n\n\nfunction MyBreadCrumb() {\n    const location = useLocation()\n    const { menuList } = useSelector(((state: any) => state.authSlice))\n    const breadList = findBreadCrumbPath(location.pathname, menuList).map(item => ({ title: item }))\n\n    return <Breadcrumb  items={breadList}  className=\"mt mb\"/>\n\n}\n\nexport default MyBreadCrumb","import { Dropdown, Space } from 'antd';\nimport { UserOutlined,PoweroffOutlined,DownOutlined} from '@ant-design/icons';\nimport type { MenuProps } from 'antd';\nimport { clearToken } from '../../store/login/authSlice';\nimport { useDispatch} from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst items: MenuProps['items'] = [\n    {\n      key: '1',\n      label: (\n        <a target=\"_blank\" >\n         个人中心\n        </a>\n      ),\n      icon:<UserOutlined/>\n    },\n    {\n      key: '2',\n      label: (\n        <a target=\"_blank\" >\n          退出登录\n        </a>\n      ),\n      icon: <PoweroffOutlined/>\n    \n    }\n]\nfunction MyHeader() {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const onClick:MenuProps['onClick'] =({key})=>{\n        if(key==='1'){\n            //跳转个人中心\n          navigate('/personal')\n\n        }else{\n            dispatch(clearToken())\n            sessionStorage.clear() //清除所有本地存储的\n\n        }\n    }\n    return (\n        <div className=\"dropdown\">\n            <Dropdown menu={{ items,onClick}}>\n                <a onClick={(e) => e.preventDefault()}>\n                    <Space>\n                       你好,{sessionStorage.getItem('username')}\n                        <DownOutlined />\n                    </Space>\n                </a>\n            </Dropdown>\n        </div>\n    )\n}\n\nexport default MyHeader","import { Breadcrumb, Layout, theme } from 'antd';\nimport { useState } from 'react';\nimport NavLeft from '../../components/navLeft';\nimport MyBreadCrumb from '../../components/breadCrumb';\nimport MyHeader from '../../components/header';\nimport { Outlet } from 'react-router-dom';\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\n\n\nfunction Home() {\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n    const {\n        token: { colorBgContainer, borderRadiusLG },\n    } = theme.useToken();\n    return (\n        <div className=\"home\">\n            <Layout style={{ minHeight: '100vh' }}>\n                \n                <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n                    <NavLeft />\n                </Sider>\n\n                <Layout>\n\n                    <Header style={{ paddingRight: '20px', background: colorBgContainer, textAlign: 'right', }} >\n                        <MyHeader />\n                    </Header>\n\n                    <Content style={{ margin: '0 16px', height: '90vh', overflowY: 'auto', overflowX: 'auto' }}>\n                        <MyBreadCrumb />\n                        <Outlet />\n                    </Content>                  \n                </Layout>\n            </Layout>\n        </div>\n    )\n}\nexport default Home"],"names":["DashboardOutlined","_jsx","UserOutlined","UnorderedListOutlined","UserAddOutlined","SettingOutlined","LaptopOutlined","ProfileOutlined","InsertRowLeftOutlined","BankOutlined","ToolOutlined","TruckOutlined","DollarOutlined","FileTextOutlined","FrownOutlined","TransactionOutlined","FundProjectionScreenOutlined","FundViewOutlined","ReadOutlined","CommentOutlined","ThunderboltOutlined","TeamOutlined","RadarChartOutlined","SnippetsOutlined","menuList","useSelector","state","authSlice","menuData","setMenuData","useState","navigate","useNavigate","location","useLocation","mapMenuItems","item","map","key","label","icon","icons","children","useEffect","async","mappedMenuItems","configMenu","_jsxs","className","src","logo","alt","width","Menu","defaultSelectedKeys","mode","theme","items","onClick","_ref","selectedKeys","pathname","breadList","path","menuItems","pathSegments","findPath","currentPath","startsWith","push","findBreadCrumbPath","title","Breadcrumb","target","PoweroffOutlined","dispatch","useDispatch","Dropdown","menu","clearToken","sessionStorage","clear","e","preventDefault","Space","getItem","DownOutlined","Header","Content","Footer","Sider","Layout","collapsed","setCollapsed","token","colorBgContainer","borderRadiusLG","useToken","style","minHeight","collapsible","onCollapse","value","NavLeft","paddingRight","background","textAlign","MyHeader","margin","height","overflowY","overflowX","MyBreadCrumb","Outlet"],"sourceRoot":""}